{
  "name": "aurora-lambda",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "del /f .env && set IS_LOCAL=true && set NODE_ENV=dev && nest start --watch",
    "start:qas": "del /f .env && set IS_LOCAL=true && set NODE_ENV=qas && nest start --watch",
    "start:prd": "del /f .env && set IS_LOCAL=true && set NODE_ENV=prd && nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "logs:dev": "serverless logs -t -f api --stage dev",
    "logs:qas": "serverless logs -t -f api --stage qas",
    "logs:prod": "serverless logs -t -f api --stage prd",
    "deploy:dev": "nest build && serverless deploy function -f api --stage dev",
    "deploy:qas": "nest build && serverless deploy function -f api --stage qas",
    "deploy:prod": "nest build && serverless deploy function -f api --stage prd",
    "deploy:all": "nest build && serverless deploy function -f api --stage dev && serverless deploy function -f api --stage qas && serverless deploy function -f api --stage prd",
    "deploy:dev:force": "nest build && serverless deploy --stage dev",
    "deploy:qas:force": "nest build && serverless deploy --stage qas",
    "deploy:prod:force": "nest build && serverless deploy --stage prd",
    "deploy:all:force": "nest build && serverless deploy --stage dev && serverless deploy --stage qas && serverless deploy --stage prd",
    "generate:layer": "echo Se removerá la carpeta nodejs si existe && rmdir /S nodejs 2> nul & echo Se creará la carpeta nodejs si no existe && mkdir nodejs && echo Se copiará package.json y package-lock.json a la ruta /nodejs && xcopy package.json nodejs && xcopy package-lock.json nodejs && echo Nos trasladamos a la ruta /nodejs && cd nodejs && echo Descargamos los módulos de producción && npm install --only=prod && echo Eliminamos package.json y package-lock.json que copiamos previamente && cd.. && del /f nodejs\\package.json && del /f nodejs\\package-lock.json && echo Eliminaremos layer.zip si existe && del /S layer.zip && echo Comprimiendo layer.zip... && powershell; Compress-Archive .\\nodejs layer && echo Eliminamos la carpeta nodejs && rmdir /S nodejs 2> nul",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.0.0",
    "aws-lambda": "^1.0.6",
    "aws-sdk": "^2.1048.0",
    "aws-serverless-express": "^3.4.0",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "crypto-js": "^4.1.1",
    "express": "^4.17.1",
    "joi": "^17.4.2",
    "mysql2": "^2.3.0",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "^27.0.6",
    "plugin": "^0.3.3",
    "prettier": "^2.3.2",
    "serverless-dotenv-plugin": "^3.9.0",
    "serverless-offline": "^8.2.0",
    "serverless-plugin-optimize": "^4.2.1-rc.1",
    "serverless-plugin-typescript": "^2.0.0",
    "serverless-stage-manager": "^1.0.5",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}